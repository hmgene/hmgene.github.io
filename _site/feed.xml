<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.10.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-12-13T12:15:52-05:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Hyunmin Kim, Ph.D</title><subtitle>Bioinformaticist, who believes Bio=Information, am interested in Cellular programming via epigenomic and transcriptomic gene regulations.</subtitle><entry><title type="html">ecDNA Prediction Using HiChIP Data</title><link href="http://localhost:4000/ecdna/eccdna/hichip/2024/10/30/ecDNA.html" rel="alternate" type="text/html" title="ecDNA Prediction Using HiChIP Data" /><published>2024-10-30T11:54:38-04:00</published><updated>2024-10-30T11:54:38-04:00</updated><id>http://localhost:4000/ecdna/eccdna/hichip/2024/10/30/ecDNA</id><content type="html" xml:base="http://localhost:4000/ecdna/eccdna/hichip/2024/10/30/ecDNA.html"><![CDATA[<h2 id="background">Background</h2>
<ul>
  <li>Focal amplification involving enhancers and target oncogenes has been observed in many cancers, such as EGFR in glioblastoma, MYC in group 3 medulloblastoma, and MYCN in both neuroblastoma and Wilms tumors <a href="https://pubmed.ncbi.nlm.nih.gov/31761532/">cell2019scacheri</a>.
    <ul>
      <li>H3K27ac ChlP-seq, ATAC-seq, POLR2A ChlP-seq, and RNA-seq signals at two EGFR enhancers for four glioblastoma lines (GBM3565, GBM3094, GSC23, G459)</li>
      <li>used HiChIP: GSE73865 (Oâ€™Brien et al., 2016), GSE90683 (Boeva et al., 2017)</li>
    </ul>
  </li>
  <li>These oncogenes were co-amplified with super-enhancers, not only in contiguous regions but also in more complex, non-contiguous amplicons. They are linearly broken into cis and trans genomic loci associated with oncogenes <a href="https://pmc.ncbi.nlm.nih.gov/articles/PMC10338009/">role of ecDNAs</a>.</li>
  <li>These regulatory elements have been preserved and evolved within cells in a circular form, referred to as extra-circular DNA <a href="https://pubmed.ncbi.nlm.nih.gov/23498933/">cell2013korbel</a>.</li>
  <li>Bioinformatics tools for analyzing whole genome sequencing (WGS) data can exhibit varying performance based on their underlying assumptions and the quality of the input data <a href="https://pubmed.ncbi.nlm.nih.gov/38746056/">38746056</a>,<a href="https://pubmed.ncbi.nlm.nih.gov/39209966/">39209966</a>.</li>
</ul>

<p><img src="https://github.com/user-attachments/assets/f72be929-e57f-4cef-b5eb-159659d87412" alt="image" /></p>

<h2 id="methods">Methods</h2>
<ul>
  <li>Convert contacts to network</li>
  <li>Assortativity (https://networkx.org/nx-guides/content/algorithms/assortativity/correlation.html)</li>
</ul>

<p><img width="612" alt="image" src="https://github.com/user-attachments/assets/0a714500-502b-43d8-914c-a9ba7586d611" /></p>

<ul>
  <li>Hint : Gini-ranking <a href="https://pubmed.ncbi.nlm.nih.gov/32293513/">32293513</a>
    <ul>
      <li>github: https://github.com/parklab/HiNT</li>
    </ul>
  </li>
  <li>Developed App <a href="http://172.20.48.147:8501">go</a></li>
</ul>

<div style="display: flex; justify-content: space-around;">
    <img src="https://github.com/user-attachments/assets/c58da3e8-0834-4def-a70a-c3432ec521e8" width="250" alt="Image 1" />
    <img src="https://github.com/user-attachments/assets/c818ca2b-624b-4c66-804d-0a1da85bc403" width="250" alt="Image 2" />
    <img src="https://github.com/user-attachments/assets/b4134233-7264-4ee4-ac18-86eb0078b451" width="250" alt="Image 3" />
</div>

<h2 id="public-datasets">Public Datasets</h2>
<ul>
  <li>Database <a href="https://pubmed.ncbi.nlm.nih.gov/35388171/">35388171</a></li>
  <li>ecDNA HiChIP datasets <a href="https://pubmed.ncbi.nlm.nih.gov/31748743/">31748743</a>.</li>
  <li>MYC-amplified colorectal cancer cell line, ecDNA hubs are tethered by the BET protein BRD4 <a href="https://pubmed.ncbi.nlm.nih.gov/34819668/">34819668</a>.</li>
  <li>HiChIP datasets from SNU16 cells (amplified for MYC and FGFR2) <a href="https://pubmed.ncbi.nlm.nih.gov/31748743/">31748743</a>.</li>
</ul>

<h1 id="previous-results">Previous Results</h1>

<h2 id="results">Results</h2>

<p><img width="1001" alt="image" src="https://github.com/user-attachments/assets/3a788d34-83e7-4684-aefc-ff8fc188d9b6" /></p>

<p><img width="974" alt="image" src="https://github.com/user-attachments/assets/ae2acc79-6ca1-4e0d-a878-492baa9225f2" /></p>

<p><img width="951" alt="image" src="https://github.com/user-attachments/assets/df1626f0-b014-48cd-bbbe-1840b8b4e71d" /></p>

<h2 id="methods-1">Methods</h2>
<ul>
  <li>Hint : Gini-ranking  <a href="https://pubmed.ncbi.nlm.nih.gov/32293513/">32293513</a>
    <ul>
      <li>github: https://github.com/parklab/HiNT</li>
    </ul>
  </li>
</ul>

<h2 id="code-anlysis">Code Anlysis</h2>

<p>The Hint source code (https://github.com/parklab/HiNT):</p>
<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">def</span><span class="w"> </span><span class="n">gini</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="o">:</span><span class="w">
    </span><span class="c1"># (Warning: This is a concise implementation, but it is O(n**2)</span><span class="w">
    </span><span class="c1"># in time and memory, where n = len(x).  *Don't* pass in huge</span><span class="w">
    </span><span class="c1"># samples!)</span><span class="w">

    </span><span class="c1"># Mean absolute difference</span><span class="w">
    </span><span class="n">mad</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.nanmean</span><span class="p">(</span><span class="n">np.abs</span><span class="p">(</span><span class="n">np.subtract.outer</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="p">)))</span><span class="w">
    </span><span class="c1"># Relative mean absolute difference</span><span class="w">
    </span><span class="n">rmad</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mad</span><span class="o">/</span><span class="n">np.nanmean</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w">
    </span><span class="c1"># Gini coefficient</span><span class="w">
    </span><span class="n">g</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0.5</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="n">rmad</span><span class="w">
    </span><span class="n">return</span><span class="w"> </span><span class="n">g</span><span class="w">

</span><span class="n">def</span><span class="w"> </span><span class="n">getGini</span><span class="p">(</span><span class="n">mat1</span><span class="p">,</span><span class="n">mat2</span><span class="p">)</span><span class="o">:</span><span class="w">
    </span><span class="n">matrix1</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.genfromtxt</span><span class="p">(</span><span class="n">mat1</span><span class="p">,</span><span class="n">delimiter</span><span class="o">=</span><span class="s2">"\t"</span><span class="p">)</span><span class="w">
    </span><span class="n">matrix2</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.genfromtxt</span><span class="p">(</span><span class="n">mat2</span><span class="p">,</span><span class="n">delimiter</span><span class="o">=</span><span class="s2">"\t"</span><span class="p">)</span><span class="w">
    </span><span class="n">matrix1</span><span class="p">[</span><span class="n">np.isfinite</span><span class="p">(</span><span class="n">matrix1</span><span class="p">)</span><span class="o">==</span><span class="m">0</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0</span><span class="w">
    </span><span class="n">matrix2</span><span class="p">[</span><span class="n">np.isfinite</span><span class="p">(</span><span class="n">matrix2</span><span class="p">)</span><span class="o">==</span><span class="m">0</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0</span><span class="w">
    </span><span class="n">rowsum1</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.sum</span><span class="p">(</span><span class="n">matrix1</span><span class="p">,</span><span class="n">axis</span><span class="o">=</span><span class="m">1</span><span class="p">)</span><span class="w">
    </span><span class="n">rowsum2</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.sum</span><span class="p">(</span><span class="n">matrix2</span><span class="p">,</span><span class="n">axis</span><span class="o">=</span><span class="m">1</span><span class="p">)</span><span class="w">
    </span><span class="n">colsum1</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.sum</span><span class="p">(</span><span class="n">matrix1</span><span class="p">,</span><span class="n">axis</span><span class="o">=</span><span class="m">0</span><span class="p">)</span><span class="w">
    </span><span class="n">colsum2</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.sum</span><span class="p">(</span><span class="n">matrix2</span><span class="p">,</span><span class="n">axis</span><span class="o">=</span><span class="m">0</span><span class="p">)</span><span class="w">
    </span><span class="n">ridx1</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.where</span><span class="p">(</span><span class="n">rowsum1</span><span class="o">==</span><span class="m">0</span><span class="p">)</span><span class="w">
    </span><span class="n">cidx1</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.where</span><span class="p">(</span><span class="n">colsum1</span><span class="o">==</span><span class="m">0</span><span class="p">)</span><span class="w">
    </span><span class="n">ridx2</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.where</span><span class="p">(</span><span class="n">rowsum2</span><span class="o">==</span><span class="m">0</span><span class="p">)</span><span class="w">
    </span><span class="n">cidx2</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.where</span><span class="p">(</span><span class="n">colsum2</span><span class="o">==</span><span class="m">0</span><span class="p">)</span><span class="w">
    </span><span class="n">ridx</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.union1d</span><span class="p">(</span><span class="n">ridx1</span><span class="p">[</span><span class="m">0</span><span class="p">],</span><span class="w"> </span><span class="n">ridx2</span><span class="p">[</span><span class="m">0</span><span class="p">])</span><span class="w">
    </span><span class="n">cidx</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.union1d</span><span class="p">(</span><span class="n">cidx1</span><span class="p">[</span><span class="m">0</span><span class="p">],</span><span class="w"> </span><span class="n">cidx2</span><span class="p">[</span><span class="m">0</span><span class="p">])</span><span class="w">

    </span><span class="n">temp1</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.delete</span><span class="p">(</span><span class="n">matrix1</span><span class="p">,</span><span class="n">ridx</span><span class="p">,</span><span class="m">0</span><span class="p">)</span><span class="w">
    </span><span class="n">temp2</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.delete</span><span class="p">(</span><span class="n">matrix2</span><span class="p">,</span><span class="n">ridx</span><span class="p">,</span><span class="m">0</span><span class="p">)</span><span class="w">
    </span><span class="n">selectedData1</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.delete</span><span class="p">(</span><span class="n">temp1</span><span class="p">,</span><span class="n">cidx</span><span class="p">,</span><span class="m">1</span><span class="p">)</span><span class="w">
    </span><span class="n">selectedData2</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.delete</span><span class="p">(</span><span class="n">temp2</span><span class="p">,</span><span class="n">cidx</span><span class="p">,</span><span class="m">1</span><span class="p">)</span><span class="w">

    </span><span class="n">average1</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.mean</span><span class="p">(</span><span class="n">selectedData1</span><span class="p">)</span><span class="w">
    </span><span class="n">average2</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.mean</span><span class="p">(</span><span class="n">selectedData2</span><span class="p">)</span><span class="w">
    </span><span class="n">tm1</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.divide</span><span class="p">(</span><span class="n">selectedData1</span><span class="p">,</span><span class="n">average1</span><span class="p">)</span><span class="w">
    </span><span class="n">tm2</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.divide</span><span class="p">(</span><span class="n">selectedData2</span><span class="p">,</span><span class="n">average2</span><span class="p">)</span><span class="w">
    </span><span class="n">division</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.divide</span><span class="p">(</span><span class="n">tm1</span><span class="p">,</span><span class="n">tm2</span><span class="p">)</span><span class="w">
    </span><span class="n">giniIndex</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">gini</span><span class="p">(</span><span class="n">np.asarray</span><span class="p">(</span><span class="n">division</span><span class="p">)</span><span class="n">.reshape</span><span class="p">(</span><span class="m">-1</span><span class="p">))</span><span class="w">
    </span><span class="n">maximum</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.nanmax</span><span class="p">(</span><span class="n">np.asarray</span><span class="p">(</span><span class="n">division</span><span class="p">)</span><span class="n">.reshape</span><span class="p">(</span><span class="m">-1</span><span class="p">))</span><span class="w">

    </span><span class="n">return</span><span class="w"> </span><span class="n">giniIndex</span><span class="p">,</span><span class="n">maximum</span><span class="w">

</span><span class="n">def</span><span class="w"> </span><span class="n">getRankProduct</span><span class="p">(</span><span class="n">matrix1MbInfo</span><span class="p">,</span><span class="n">background1MbInfo</span><span class="p">,</span><span class="n">outdir</span><span class="p">,</span><span class="n">name</span><span class="p">)</span><span class="o">:</span><span class="w">
    </span><span class="n">rpout</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">os.path.join</span><span class="p">(</span><span class="n">outdir</span><span class="p">,</span><span class="n">name</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="s1">'_chrompairs_rankProduct.txt'</span><span class="p">)</span><span class="w">
    </span><span class="n">outf</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">open</span><span class="p">(</span><span class="n">rpout</span><span class="p">,</span><span class="s1">'w'</span><span class="p">)</span><span class="w">
    </span><span class="n">ginis</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">[]</span><span class="w">
    </span><span class="n">maximums</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">[]</span><span class="w">
    </span><span class="n">chrompairs</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">[]</span><span class="w">
    </span><span class="k">for</span><span class="w"> </span><span class="n">chrompair</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">matrix1MbInfo</span><span class="o">:</span><span class="w">
        </span><span class="c1">#print chrompair</span><span class="w">
        </span><span class="n">matrix1</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">matrix1MbInfo</span><span class="p">[</span><span class="n">chrompair</span><span class="p">]</span><span class="w">
        </span><span class="n">matrix2</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">background1MbInfo</span><span class="p">[</span><span class="n">chrompair</span><span class="p">]</span><span class="w">
        </span><span class="n">giniIndex</span><span class="p">,</span><span class="n">maximum</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">getGini</span><span class="p">(</span><span class="n">matrix1</span><span class="p">,</span><span class="n">matrix2</span><span class="p">)</span><span class="w">
        </span><span class="n">chrompairs.append</span><span class="p">(</span><span class="n">chrompair</span><span class="p">)</span><span class="w">
        </span><span class="n">ginis.append</span><span class="p">(</span><span class="n">giniIndex</span><span class="p">)</span><span class="w">
        </span><span class="n">maximums.append</span><span class="p">(</span><span class="n">maximum</span><span class="p">)</span><span class="w">
    </span><span class="n">rankgini</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">len</span><span class="p">(</span><span class="n">ginis</span><span class="p">)</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="n">rankdata</span><span class="p">(</span><span class="n">ginis</span><span class="p">)</span><span class="w">
    </span><span class="n">rankmaximum</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">len</span><span class="p">(</span><span class="n">maximums</span><span class="p">)</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="n">rankdata</span><span class="p">(</span><span class="n">maximums</span><span class="p">)</span><span class="w">
    </span><span class="c1">#print rankgini,rankmaximum</span><span class="w">
    </span><span class="n">rps</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="n">np.divide</span><span class="p">(</span><span class="n">rankgini</span><span class="p">,</span><span class="n">len</span><span class="p">(</span><span class="n">ginis</span><span class="p">)</span><span class="o">*</span><span class="m">1.0</span><span class="p">))</span><span class="o">*</span><span class="p">(</span><span class="n">np.divide</span><span class="p">(</span><span class="n">rankmaximum</span><span class="p">,</span><span class="n">len</span><span class="p">(</span><span class="n">maximums</span><span class="p">)</span><span class="o">*</span><span class="m">1.0</span><span class="p">))</span><span class="w">
    </span><span class="n">result</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">np.stack</span><span class="p">((</span><span class="n">chrompairs</span><span class="p">,</span><span class="n">ginis</span><span class="p">,</span><span class="n">maximums</span><span class="p">,</span><span class="n">rps</span><span class="p">),</span><span class="n">axis</span><span class="o">=</span><span class="m">-1</span><span class="p">)</span><span class="w">
    </span><span class="n">sortedResult</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">sorted</span><span class="p">(</span><span class="n">result</span><span class="p">,</span><span class="w"> </span><span class="n">key</span><span class="o">=</span><span class="n">itemgetter</span><span class="p">(</span><span class="m">-1</span><span class="p">))</span><span class="w">
    </span><span class="n">outf.write</span><span class="p">(</span><span class="s1">'\t'</span><span class="n">.join</span><span class="p">([</span><span class="s1">'ChromPair'</span><span class="p">,</span><span class="s2">"GiniIndex"</span><span class="p">,</span><span class="s2">"Maximum"</span><span class="p">,</span><span class="s2">"RankProduct"</span><span class="p">])</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="s1">'\n'</span><span class="p">)</span><span class="w">
    </span><span class="k">for</span><span class="w"> </span><span class="n">res</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">sortedResult</span><span class="o">:</span><span class="w">
        </span><span class="n">chrompair</span><span class="p">,</span><span class="w"> </span><span class="n">gini</span><span class="p">,</span><span class="w"> </span><span class="n">maximum</span><span class="p">,</span><span class="w"> </span><span class="n">rp</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">res</span><span class="w">
        </span><span class="n">newres</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">[</span><span class="n">chrompair</span><span class="p">,</span><span class="w"> </span><span class="n">str</span><span class="p">(</span><span class="n">gini</span><span class="p">),</span><span class="w"> </span><span class="n">str</span><span class="p">(</span><span class="n">maximum</span><span class="p">),</span><span class="w"> </span><span class="n">str</span><span class="p">(</span><span class="n">rp</span><span class="p">)]</span><span class="w">
        </span><span class="n">outf.write</span><span class="p">(</span><span class="s1">'\t'</span><span class="n">.join</span><span class="p">(</span><span class="n">newres</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="s1">'\n'</span><span class="p">)</span><span class="w">
    </span><span class="n">outf.close</span><span class="p">()</span><span class="w">
   
    </span><span class="n">return</span><span class="w"> </span><span class="n">rpout</span><span class="w">

</span></code></pre></div></div>]]></content><author><name></name></author><category term="ecdna" /><category term="eccdna" /><category term="hichip" /><summary type="html"><![CDATA[Background Focal amplification involving enhancers and target oncogenes has been observed in many cancers, such as EGFR in glioblastoma, MYC in group 3 medulloblastoma, and MYCN in both neuroblastoma and Wilms tumors cell2019scacheri. H3K27ac ChlP-seq, ATAC-seq, POLR2A ChlP-seq, and RNA-seq signals at two EGFR enhancers for four glioblastoma lines (GBM3565, GBM3094, GSC23, G459) used HiChIP: GSE73865 (Oâ€™Brien et al., 2016), GSE90683 (Boeva et al., 2017) These oncogenes were co-amplified with super-enhancers, not only in contiguous regions but also in more complex, non-contiguous amplicons. They are linearly broken into cis and trans genomic loci associated with oncogenes role of ecDNAs. These regulatory elements have been preserved and evolved within cells in a circular form, referred to as extra-circular DNA cell2013korbel. Bioinformatics tools for analyzing whole genome sequencing (WGS) data can exhibit varying performance based on their underlying assumptions and the quality of the input data 38746056,39209966.]]></summary></entry><entry><title type="html">Copy Number Variation and ecDNA effets Using HiChIP Data</title><link href="http://localhost:4000/scrna/2024/09/21/stamp.html" rel="alternate" type="text/html" title="Copy Number Variation and ecDNA effets Using HiChIP Data" /><published>2024-09-21T11:54:38-04:00</published><updated>2024-09-21T11:54:38-04:00</updated><id>http://localhost:4000/scrna/2024/09/21/stamp</id><content type="html" xml:base="http://localhost:4000/scrna/2024/09/21/stamp.html"><![CDATA[<ul>
  <li>paper: https://www.biorxiv.org/content/10.1101/2024.10.03.616013v1</li>
  <li>code : https://github.com/emanuelepitino/Stamp_V4</li>
  <li>takeaway:
    <ul>
      <li>no special analysists no sequencing required.</li>
      <li>RNA vs protein comparison was incomplete</li>
      <li>How the trajectory applied w/ less stringent filtering affect the performance</li>
    </ul>
  </li>
</ul>

<p><img src="https://github.com/user-attachments/assets/ac802bb5-d273-4dff-b471-2972cd4117c6" alt="image" /></p>

<table>
  <thead>
    <tr>
      <th>Â </th>
      <th><em>STAMP</em></th>
      <th>scRNA</th>
      <th>Spatial</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Diss.cells</td>
      <td>high</td>
      <td>low</td>
      <td>high</td>
    </tr>
    <tr>
      <td>Cost</td>
      <td>FixedCost</td>
      <td>Scaled w/ cells</td>
      <td>Fixed cost</td>
    </tr>
    <tr>
      <td>Genes</td>
      <td>Limitted to panel of known</td>
      <td>whole transcriptome</td>
      <td>Curated panel</td>
    </tr>
  </tbody>
</table>]]></content><author><name></name></author><category term="scrna" /><summary type="html"><![CDATA[paper: https://www.biorxiv.org/content/10.1101/2024.10.03.616013v1 code : https://github.com/emanuelepitino/Stamp_V4 takeaway: no special analysists no sequencing required. RNA vs protein comparison was incomplete How the trajectory applied w/ less stringent filtering affect the performance]]></summary></entry><entry><title type="html">Predict Copy Number Variation Using HiChIP Data</title><link href="http://localhost:4000/cnv/hichip/2024/09/08/cnv-hichip-1.html" rel="alternate" type="text/html" title="Predict Copy Number Variation Using HiChIP Data" /><published>2024-09-08T11:54:38-04:00</published><updated>2024-09-08T11:54:38-04:00</updated><id>http://localhost:4000/cnv/hichip/2024/09/08/cnv-hichip-1</id><content type="html" xml:base="http://localhost:4000/cnv/hichip/2024/09/08/cnv-hichip-1.html"><![CDATA[<h2 id="background">Background</h2>
<ul>
  <li>Depth of coverage (DOC), off-target CNV approaches have been applied to exome and ChIP-seq data [PMC9039557][PMC4396974].</li>
  <li>DOC-off-target methods require filtering out peak regions when using non-input immunoprecipitation (IP) samples to avoid off-target binding signals.</li>
  <li>The peak calling outcomes are highly dependent on the specific algorithm used.</li>
  <li>Most ChIP-seq and ATAC-seq peak callers are not designed for detecting complex, non-symmetric peak patterns.
    <ul>
      <li>For instance, H3K4me3 peaks are typically sharply localized, while H3K4me1/3 peaks span broader domains.</li>
      <li>H3K27ac marks both large regions, such as super-enhancers, and smaller, discrete regions like promoters, exhibiting both broad and narrow peak characteristics [35788238][ref..].</li>
      <li>Pol2 ..</li>
    </ul>
  </li>
  <li>There are some CNV tools for HiC
    <ul>
      <li>LOIC [PMC6127909]</li>
      <li>HiNT [PMC7087379]</li>
      <li>HiCnv and OneD [ref]</li>
    </ul>
  </li>
  <li><strong>No CNV tools for HiChIP data</strong></li>
</ul>

<p>Example of CNV calls on MG63.3 H3K27ac at Chr6 Regions
<img width="1343" alt="image" src="https://github.com/user-attachments/assets/221d2413-e53b-4706-9ad4-014c69dee9a2" /></p>

<h2 id="problem">Problem</h2>
<h3 id="different-cnvs-with-different-data">Different CNVs with Different Data</h3>
<p>HiChIP(black), ChIP-seq(blue), and ChIP-seq Input(Gold)
<img width="708" alt="image" src="https://github.com/user-attachments/assets/eb607ed2-29f1-409d-98ca-524c0b73a796" /></p>

<h3 id="different-peaks-with-different-algorithms">Different Peaks with Different Algorithms</h3>
<ul>
  <li>CopywriteR : non-parameteric, FDR-base, expand peaks within <strong>segment boundaries</strong></li>
  <li>HOMER : Simple poisson model, 4-fold greater than in the surrounding 10 kb region, The maximum distance used to stitch peaks together</li>
  <li>MACS2 : Dynamic poisson parameters (Î»local = max(Î»BG, Î»1k, Î»5k, Î»10k), bad at expantion</li>
</ul>

<p>CNV score is measured after filtering peaks.</p>
<ul>
  <li>Peaks by CopywriteR (top), HOMER(p-53)(mid), MACS2(p-4)(bottom)
<img width="644" alt="image" src="https://github.com/user-attachments/assets/276a317f-4318-4452-a8a9-611803a6a6b4" /></li>
</ul>

<h2 id="methods">Methods</h2>
<p>To make the peak caller smarter</p>
<ul>
  <li>
    <p>Understand CopywriteR Model</p>
  </li>
  <li>Modify the CopywriteR algorithm (reduce peak expantion)</li>
  <li>Peak Expantion Algorithm: <a href="https://github.com/PeeperLab/CopywriteR/blob/master/R/CopywriteR.R">fullcode</a>
    <div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="m">345</span><span class="w">                 </span><span class="n">retest.peak.ranges</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">apply</span><span class="p">(</span><span class="n">test</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
</span><span class="m">346</span><span class="w">                     </span><span class="n">left.lower.boundary</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">max</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="p">(</span><span class="nf">as.integer</span><span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="s2">"start"</span><span class="p">])</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="p">(</span><span class="n">resolution</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="m">1</span><span class="p">)))</span><span class="w">
</span><span class="m">347</span><span class="w">                     </span><span class="n">left.higher.boundary</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">max</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="p">(</span><span class="nf">as.integer</span><span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="s2">"start"</span><span class="p">])</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="m">1</span><span class="p">))</span><span class="w">
</span><span class="m">348</span><span class="w">                     </span><span class="n">right.lower.boundary</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">min</span><span class="p">(</span><span class="n">chromosomes</span><span class="p">[</span><span class="n">selection</span><span class="p">],</span><span class="w">
</span><span class="m">349</span><span class="w">                                                 </span><span class="p">(</span><span class="nf">as.integer</span><span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="s2">"end"</span><span class="p">])</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="m">1</span><span class="p">))</span><span class="w">
</span><span class="m">350</span><span class="w">                     </span><span class="n">right.higher.boundary</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">min</span><span class="p">(</span><span class="n">chromosomes</span><span class="p">[</span><span class="n">selection</span><span class="p">],</span><span class="w">
</span><span class="m">351</span><span class="w">                                                  </span><span class="p">(</span><span class="nf">as.integer</span><span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="s2">"end"</span><span class="p">])</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="p">(</span><span class="n">resolution</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="m">1</span><span class="p">)))</span><span class="w">
</span><span class="m">352</span><span class="w">                     </span><span class="n">left.peakCutoff</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">ceiling</span><span class="p">(</span><span class="n">.peakCutoff</span><span class="p">(</span><span class="n">cov.chr</span><span class="p">[</span><span class="n">left.lower.boundary</span><span class="o">:</span><span class="n">left.higher.boundary</span><span class="p">],</span><span class="n">fdr.cutoff</span><span class="o">=</span><span class="n">FDRT</span><span class="p">))</span><span class="w">
</span><span class="m">353</span><span class="w">                     </span><span class="n">right.peakCutoff</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">ceiling</span><span class="p">(</span><span class="n">.peakCutoff</span><span class="p">(</span><span class="n">cov.chr</span><span class="p">[</span><span class="n">right.lower.boundary</span><span class="o">:</span><span class="n">right.higher.boundary</span><span class="p">],</span><span class="n">fdr.cutoff</span><span class="o">=</span><span class="n">FDRT</span><span class="p">))</span><span class="w">
</span></code></pre></div>    </div>
    <blockquote>
      <p>The original algorithm uses FDR=0.1 for adding peaks
Applied stringent FDRT=0.0001</p>
    </blockquote>
  </li>
</ul>

<h2 id="results">Results</h2>
<ul>
  <li>Recovered CNV calling at 5â€™ body of SCIRT 
<img width="1316" alt="image" src="https://github.com/user-attachments/assets/c2469821-5c32-4c47-ae33-e0ca53ae5abc" /></li>
</ul>

<h2 id="discussion">Discussion</h2>
<ul>
  <li>
    <p>Loops are good indicators CNV?
<img width="1300" alt="image" src="https://github.com/user-attachments/assets/0c3fe4e2-7432-4d3b-8c75-ed3a02f904df" /></p>
  </li>
  <li>
    <p>New model
\(log(C) = \beta_0( GCcontent ) + \beta_1( Mappability ) + \beta_2(3Dcontact) \epsilon\)</p>
  </li>
  <li>
    <p>Other examples
<img width="691" alt="image" src="https://github.com/user-attachments/assets/f4273b16-13a0-4bcc-a597-86d98a2bc32a" />
<img width="627" alt="image" src="https://github.com/user-attachments/assets/b7d3ff8a-aa0c-44b5-bd2e-106c17ae91ab" /></p>
  </li>
</ul>]]></content><author><name></name></author><category term="cnv" /><category term="hichip" /><summary type="html"><![CDATA[Background Depth of coverage (DOC), off-target CNV approaches have been applied to exome and ChIP-seq data [PMC9039557][PMC4396974]. DOC-off-target methods require filtering out peak regions when using non-input immunoprecipitation (IP) samples to avoid off-target binding signals. The peak calling outcomes are highly dependent on the specific algorithm used. Most ChIP-seq and ATAC-seq peak callers are not designed for detecting complex, non-symmetric peak patterns. For instance, H3K4me3 peaks are typically sharply localized, while H3K4me1/3 peaks span broader domains. H3K27ac marks both large regions, such as super-enhancers, and smaller, discrete regions like promoters, exhibiting both broad and narrow peak characteristics [35788238][ref..]. Pol2 .. There are some CNV tools for HiC LOIC [PMC6127909] HiNT [PMC7087379] HiCnv and OneD [ref] No CNV tools for HiChIP data]]></summary></entry><entry><title type="html">Single-cell SeqWell DATA with cNMF</title><link href="http://localhost:4000/cnmf/single-cell/2024/09/07/cnmf-cns-1.html" rel="alternate" type="text/html" title="Single-cell SeqWell DATA with cNMF" /><published>2024-09-07T11:55:38-04:00</published><updated>2024-09-07T11:55:38-04:00</updated><id>http://localhost:4000/cnmf/single-cell/2024/09/07/cnmf-cns-1</id><content type="html" xml:base="http://localhost:4000/cnmf/single-cell/2024/09/07/cnmf-cns-1.html"><![CDATA[<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">dplyr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">Seurat</span><span class="p">)</span><span class="w">
</span><span class="n">options</span><span class="p">(</span><span class="n">bitmapType</span><span class="o">=</span><span class="s1">'cairo'</span><span class="p">)</span><span class="w">
</span><span class="n">options</span><span class="p">(</span><span class="n">future.globals.maxSize</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">8000</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="m">1024</span><span class="o">^</span><span class="m">2</span><span class="p">)</span><span class="w">

</span><span class="c1">################### We converted all the raw STARsolo outputs into a tab-delimited text matrix (genes in rows, cells in columns) and merged all these matrices to form a single matrix. The barcodes for each tumor were prefixed with "TumorID_" #########</span><span class="w">

</span><span class="n">data</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.table</span><span class="p">(</span><span class="s2">"All_SeqWell_220818_Raw_Expression.txt"</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="o">=</span><span class="s2">"\t"</span><span class="p">,</span><span class="w"> </span><span class="n">head</span><span class="o">=</span><span class="kc">TRUE</span><span class="p">,</span><span class="w"> </span><span class="n">row.names</span><span class="o">=</span><span class="m">1</span><span class="p">)</span><span class="w">

</span><span class="n">Tumors.combined</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">CreateSeuratObject</span><span class="p">(</span><span class="n">counts</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">data</span><span class="p">,</span><span class="w"> </span><span class="n">project</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"SeqWell"</span><span class="p">,</span><span class="w"> </span><span class="n">min.cells</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">3</span><span class="p">,</span><span class="w"> </span><span class="n">min.features</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">200</span><span class="p">)</span><span class="w">

</span><span class="n">Tumors.combined</span><span class="p">[[</span><span class="s2">"percent.mt"</span><span class="p">]]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">PercentageFeatureSet</span><span class="p">(</span><span class="n">Tumors.combined</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"^MT."</span><span class="p">)</span><span class="w">

</span><span class="n">all.genes</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rownames</span><span class="p">(</span><span class="n">Tumors.combined</span><span class="p">)</span><span class="w">


</span><span class="c1">######## Filtering Low Quality Cells ##############</span><span class="w">

</span><span class="n">Tumors.combined</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">subset</span><span class="p">(</span><span class="n">Tumors.combined</span><span class="p">,</span><span class="w"> </span><span class="n">subset</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">nFeature_RNA</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="m">500</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="n">nFeature_RNA</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">6000</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="n">nCount_RNA</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="m">1000</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="n">percent.mt</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">25</span><span class="p">)</span><span class="w">

</span><span class="n">pdf</span><span class="p">(</span><span class="s2">"SeqWell_WT_Mutant_Tumors_QC_AF.pdf"</span><span class="p">,</span><span class="w"> </span><span class="n">height</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">6</span><span class="p">,</span><span class="w"> </span><span class="n">width</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">20</span><span class="p">)</span><span class="w">
</span><span class="n">VlnPlot</span><span class="p">(</span><span class="n">Tumors.combined</span><span class="p">,</span><span class="w"> </span><span class="n">features</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"nFeature_RNA"</span><span class="p">,</span><span class="w"> </span><span class="s2">"nCount_RNA"</span><span class="p">,</span><span class="w"> </span><span class="s2">"percent.mt"</span><span class="p">),</span><span class="w"> </span><span class="n">ncol</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">3</span><span class="p">)</span><span class="w">
</span><span class="n">dev.off</span><span class="p">()</span><span class="w">

</span><span class="c1">############### Normalization ##################</span><span class="w">

</span><span class="n">Tumors.combined</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">NormalizeData</span><span class="p">(</span><span class="n">Tumors.combined</span><span class="p">)</span><span class="w">
</span><span class="n">all.genes</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rownames</span><span class="p">(</span><span class="n">Tumors.combined</span><span class="p">)</span><span class="w">
</span><span class="n">Tumors.combined</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ScaleData</span><span class="p">(</span><span class="n">Tumors.combined</span><span class="p">,</span><span class="w"> </span><span class="n">features</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">all.genes</span><span class="p">)</span><span class="w">


</span><span class="c1">######## Calculating Variable Scores for each gene in the matrix and outputting the results ##############</span><span class="w">

</span><span class="n">Tumors.combined</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">FindVariableFeatures</span><span class="p">(</span><span class="n">Tumors.combined</span><span class="p">,</span><span class="w"> </span><span class="n">selection.method</span><span class="o">=</span><span class="s2">"vst"</span><span class="p">,</span><span class="w"> </span><span class="n">nfeatures</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2000</span><span class="p">)</span><span class="w">

</span><span class="n">Var</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">HVFInfo</span><span class="p">(</span><span class="n">object</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Tumors.combined</span><span class="p">,</span><span class="w"> </span><span class="n">selection.method</span><span class="o">=</span><span class="s2">"vst"</span><span class="p">,</span><span class="w"> </span><span class="n">assay</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"RNA"</span><span class="p">)</span><span class="w">

</span><span class="n">write.table</span><span class="p">(</span><span class="n">Var</span><span class="p">,</span><span class="w"> </span><span class="n">file</span><span class="o">=</span><span class="s2">"SeqWell_Full_Gene_List_Variable_Score.txt"</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="o">=</span><span class="s2">"\t"</span><span class="p">,</span><span class="w"> </span><span class="n">quote</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">,</span><span class="w"> </span><span class="n">col.names</span><span class="o">=</span><span class="kc">NA</span><span class="p">)</span><span class="w">

</span><span class="c1">########## Identified top 4000 variable genes and saved them in a text file as a list "Variable_Genes_SeqWell.txt" (one gene per row) #################</span><span class="w">

</span><span class="n">Variable_Genes</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">scan</span><span class="p">(</span><span class="s2">"Variable_Genes_SeqWell.txt"</span><span class="p">,</span><span class="w"> </span><span class="n">what</span><span class="o">=</span><span class="s2">""</span><span class="p">)</span><span class="w">

</span><span class="n">Matrix</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">as.matrix</span><span class="p">(</span><span class="n">GetAssayData</span><span class="p">(</span><span class="n">Tumors.combined</span><span class="p">,</span><span class="w"> </span><span class="n">slot</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"counts"</span><span class="p">))</span><span class="w">


</span><span class="n">SeqWell3</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">Matrix</span><span class="p">[</span><span class="n">rownames</span><span class="p">(</span><span class="n">Matrix</span><span class="p">)</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">Variable_Genes</span><span class="p">,]</span><span class="w">

</span><span class="n">write.table</span><span class="p">(</span><span class="n">t</span><span class="p">(</span><span class="n">SeqWell3</span><span class="p">),</span><span class="w"> </span><span class="n">file</span><span class="o">=</span><span class="s2">"SeqWell_Matrix_Filtered_For_NMF.txt"</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="o">=</span><span class="s2">"\t"</span><span class="p">,</span><span class="w"> </span><span class="n">quote</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">,</span><span class="w"> </span><span class="n">col.names</span><span class="o">=</span><span class="kc">NA</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>]]></content><author><name></name></author><category term="cnmf" /><category term="single-cell" /><summary type="html"><![CDATA[```R library(dplyr) library(Seurat) options(bitmapType=â€™cairoâ€™) options(future.globals.maxSize = 8000 * 1024^2)]]></summary></entry></feed>